package ${packageName}.${subPackageName}.controller;

#if(!$table.genTpl.equals("crud"))
import com.alibaba.fastjson.JSONArray;
#end
import ${packageName}.common.config.aop.Log;
import ${packageName}.${subPackageName}.service.I${EntityName}Service;
import ${packageName}.${subPackageName}.validate.${EntityName}Param;
#if($table.genTpl.equals("crud"))
import ${packageName}.common.validate.PageParam;
import ${packageName}.${subPackageName}.vo.${EntityName}ListVo;
#end
import ${packageName}.${subPackageName}.vo.${EntityName}DetailVo;
import ${packageName}.common.core.AjaxResult;
#if($table.genTpl.equals("crud"))
import ${packageName}.common.core.PageResult;
#end
import ${packageName}.common.validator.annotation.IDMust;
import ${packageName}.common.validator.annotation.IDLongMust;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import java.util.Arrays;
import java.util.Map;

#set($isAuthor = !$authorName.equals(""))
/**
 * ${functionName}管理
#if($isAuthor)
 * @author ${authorName}
#end
 */
@RestController
@RequestMapping("api/${subPackageName}/${moduleName}")
public class ${EntityName}Controller {

    @Resource
    I${EntityName}Service i${EntityName}Service;

    /**
     * ${functionName}列表
     *
     #if(!$authorName.equals(""))
     * @author ${authorName}
     #end
     #if($table.genTpl.equals("crud"))
     * @param pageParam 分页参数
     #end
     * @param params 搜索参数
     * @return Object
     */
    #if($table.genTpl.equals("crud"))
    @GetMapping("/list")
    public Object list(@Validated PageParam pageParam,
                       @RequestParam Map<String, String> params) {
        PageResult<${EntityName}ListVo> list = i${EntityName}Service.list(pageParam, params);
        return AjaxResult.success(list);
    }
    #else
    @GetMapping("/list")
    public Object list(@RequestParam Map<String, String> params) {
        JSONArray list = i${EntityName}Service.list(params);
        return AjaxResult.success(list);
    }
    #end
    /**
     * ${functionName}详情
     *
     #if(!$authorName.equals(""))
     * @author ${authorName}
     #end
     * @param ${pk.javaField} 主键ID
     * @return Object
     */
    @GetMapping("/detail")
    public Object detail(@Validated#if($pk.javaType.equals("Long")) @IDLongMust()#else @IDMust() #end @RequestParam("${pk.javaField}") ${pk.javaType} ${pk.javaField}) {
        ${EntityName}DetailVo detail = i${EntityName}Service.detail(${pk.javaField});
        return AjaxResult.success(detail);
    }

    /**
     * ${functionName}新增
     *
     #if(!$authorName.equals(""))
     * @author ${authorName}
     #end
     * @param ${entityName}Param 参数
     * @return Object
     */
    @Log(title = "${functionName}新增")
    @PostMapping("/add")
    public Object add(@Validated(value = ${EntityName}Param.create.class) @RequestBody ${EntityName}Param ${entityName}Param) {
        i${EntityName}Service.add(${entityName}Param);
        return AjaxResult.success();
    }

    /**
     * ${functionName}编辑
     *
     #if(!$authorName.equals(""))
     * @author ${authorName}
     #end
     * @param ${entityName}Param 参数
     * @return Object
     */
    @Log(title = "${functionName}编辑")
    @PostMapping("/edit")
    public Object edit(@Validated(value = ${EntityName}Param.update.class) @RequestBody ${EntityName}Param ${entityName}Param) {
        i${EntityName}Service.edit(${entityName}Param);
        return AjaxResult.success();
    }

    #if(false)
    /**
     * ${functionName}删除
     *
     #if(!$authorName.equals(""))
     * @author ${authorName}
     #end
     * @param ${entityName}Param 参数
     * @return Object
     */
    @Log(title = "${functionName}删除")
    @PostMapping("/del")
    public Object del(@Validated(value = ${EntityName}Param.delete.class) @RequestBody ${EntityName}Param ${entityName}Param) {
        #set($AttrName=$primaryKey.substring(0,1).toUpperCase() + ${primaryKey.substring(1)})
        i${EntityName}Service.del(${entityName}Param.get${AttrName}());
        return AjaxResult.success();
    }
    #end

    /**
     * ${functionName}批量删除
     *
     * @param ${pk.javaField}s 参数
     * @return Object
     */
    @Log(title = "${functionName}批量删除")
    @PostMapping("/delBatch")
    public Object delBatch(@RequestBody ${pk.javaType}[] ${pk.javaField}s) {
        i${EntityName}Service.removeByIds(Arrays.asList(${pk.javaField}s));
        return AjaxResult.success();
    }

}
